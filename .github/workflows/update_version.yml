name: Update Version Info
on:
  pull_request:
    branches:
      - main
    types: [closed]
jobs:
  check_label:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    outputs:
      label: ${{ steps.set_outputs.outputs.label }}
      message: ${{ steps.set_outputs.outputs.message }}
    steps:
      - if: contains(github.event.pull_request.labels.*.name, 'patch')
        run: echo "LABEL=patch" >> $GITHUB_ENV

      - if: contains(github.event.pull_request.labels.*.name, 'minor')
        run: echo "LABEL=minor" >> $GITHUB_ENV

      - if: contains(github.event.pull_request.labels.*.name, 'major')
        run: echo "LABEL=major" >> $GITHUB_ENV
      
      - id: set_outputs
        run: |
          echo "label=${{ env.LABEL }}" >> "$GITHUB_OUTPUT"
          if [ "${{ env.LABEL }}" = "" ]; then \
            echo "message=Update version.txt" >> "$GITHUB_OUTPUT"; \
          else \
            echo "message=Update ${{ env.LABEL }} version" >> "$GITHUB_OUTPUT"; \
          fi

  update_version_info:
    runs-on: ubuntu-latest
    needs: check_label
    steps:
      - uses: actions/checkout@v4
      - name: Update version info
        run: bash update_version.sh ${{ needs.check_label.outputs.label }}

      - name: Add a commit and push to the main branch
        run: |
          git remote set-url origin https://github-actions:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git add .
          git commit -m "${{ needs.check_label.outputs.message }}"
          git push origin HEAD:${GITHUB_REF}

      - name: Add a tag
        if: needs.check_label.outputs.label != ''
        run: |
          ver=$(head -1 version.txt)
          tag="v${ver}"
          echo "TAG=${tag}" >> $GITHUB_ENV
          git tag -a $tag -m "version ${tag}"
          git push origin $tag

      - name: Create Release Draft
        if: needs.check_label.outputs.label != ''
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG }}
          name: ${{ env.TAG }}
          draft: true
          prerelease: false
